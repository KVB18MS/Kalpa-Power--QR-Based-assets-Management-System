// Generated by view binder compiler. Do not edit!
package com.kalpapower.qrmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kalpapower.qrmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFaultBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textFaultDate;

  @NonNull
  public final TextView textFaultDescription;

  @NonNull
  public final TextView textSeverity;

  @NonNull
  public final TextView textTechnician;

  private ItemFaultBinding(@NonNull CardView rootView, @NonNull TextView textFaultDate,
      @NonNull TextView textFaultDescription, @NonNull TextView textSeverity,
      @NonNull TextView textTechnician) {
    this.rootView = rootView;
    this.textFaultDate = textFaultDate;
    this.textFaultDescription = textFaultDescription;
    this.textSeverity = textSeverity;
    this.textTechnician = textTechnician;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFaultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFaultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_fault, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFaultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_fault_date;
      TextView textFaultDate = ViewBindings.findChildViewById(rootView, id);
      if (textFaultDate == null) {
        break missingId;
      }

      id = R.id.text_fault_description;
      TextView textFaultDescription = ViewBindings.findChildViewById(rootView, id);
      if (textFaultDescription == null) {
        break missingId;
      }

      id = R.id.text_severity;
      TextView textSeverity = ViewBindings.findChildViewById(rootView, id);
      if (textSeverity == null) {
        break missingId;
      }

      id = R.id.text_technician;
      TextView textTechnician = ViewBindings.findChildViewById(rootView, id);
      if (textTechnician == null) {
        break missingId;
      }

      return new ItemFaultBinding((CardView) rootView, textFaultDate, textFaultDescription,
          textSeverity, textTechnician);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
